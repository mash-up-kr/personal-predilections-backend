buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'

jar {
	baseName = 'personal-predilections-backend'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')

//	runtime('com.h2database:h2')
	runtime('mysql:mysql-connector-java')
//	runtime('org.postgresql:postgresql')

	compile('org.projectlombok:lombok')

    // Swagger
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.1'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1'

    // queryDSL
    compile 'com.mysema.querydsl:querydsl-jpa:3.7.2'
    compile 'com.mysema.querydsl:querydsl-apt:3.7.2'
}


// https://gist.github.com/EdwardBeckett/5377401
// http://blog.jongminkim.co.kr/?p=386
sourceSets {
    querydsl {
        java {
            srcDirs = ['src/main/querydsl']
        }
    }
}

configurations {
//    compile.exclude module: "spring-boot-starter-jdbc"  // 다른 commection pool 사용시 jdbc exclude
    querydslapt
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            '-proc:only', '-processor', 'com.mysema.query.apt.jpa.JPAAnnotationProcessor'
    ]
    destinationDir = sourceSets.querydsl.java.srcDirs.iterator().next()
    dependencyCacheDir = compileJava.dependencyCacheDir
}
generateQueryDSL.mustRunAfter clean

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileQuerydslJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

clean {
    delete sourceSets.querydsl.java.srcDirs
}

idea {
    module {
        sourceDirs += file('src/main/querydsl')
    }
}